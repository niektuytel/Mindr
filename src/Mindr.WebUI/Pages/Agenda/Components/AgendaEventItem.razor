@using Mindr.WebUI.Pages.Agenda.Components;
@inherits FluentComponentBase


<div style=@("width: -webkit-fill-available;border-radius: 5px;box-shadow: 0px 0px 5px 2px #0000001f;margin: 10px;" + "border-color:" + Data.Color)>
    <div>@Data.StartDate.DateTime.ToShortTimeString() - @Data.EndDate.DateTime.ToShortTimeString()</div>
    @Data.Subject
    @if (IsLoading)
    {
        <FluentProgressRing style="width: 24px; height: 24px;"></FluentProgressRing>
    }
    else if (ConnectorEvents?.Any() == true)
    {
        if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <Stack Style="min-height:50px;border: 1px solid #D8000C;background-color: #FFBABA;padding: 3px;">
                @ErrorMessage
            </Stack>
        }

        foreach (var connectorEvent in ConnectorEvents)
        {
            <Stack Orientation="Orientation.Horizontal" HorizontalGap="0" Style="@($"cursor:pointer;border-radius:5px;border: solid 1px {connectorEvent.ConnectorColor};margin: 2px;padding:2px;width: fit-content;")">
                <div @onclick="@(() => _connectorEventDialog.HandleOnDialogOpen(Data, connectorEvent))">
                    @connectorEvent.ConnectorName
                </div>
                <div style="padding-left: 5px;padding-right: 5px;" @onclick="@(async () => await OnDelete(connectorEvent))">
                    <b>x</b>
                </div>
            </Stack>
        }
    }
    <Stack Orientation="Orientation.Horizontal" HorizontalGap="0" Style="@($"cursor:pointer;border-radius:5px;border: solid 1px black;margin: 2px;padding:2px;width: fit-content;")" @onclick="@(() => _connectorEventDialog.HandleOnDialogOpen(Data, null))">
        Add connector
        <FluentIcon Slot="start" Name="@FluentIcons.Add" Size="@IconSize.Size16" Variant="@IconVariant.Regular" Color="@Color.Accent" Style="align-self: center;" />
    </Stack>
</div>
<ConnectorEventDialog @ref="@_connectorEventDialog" OnUpdate="OnUpdate" OnCreate="OnCreate"/>

