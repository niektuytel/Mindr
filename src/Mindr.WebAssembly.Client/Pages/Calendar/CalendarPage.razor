@attribute [Route("/calendar/{CalendarId?}")]
@using BlazorScheduler
@using DemoApp.Models;
@using DemoApp;
@using Microsoft.AspNetCore.Authorization;
@using Mindr.WebAssembly.Client.Pages.Calendar.Dialogs;
@using Mindr.WebAssembly.Client.Pages.Calendar.Components;
@using MudBlazor;

@attribute [Authorize]
@inherits LayoutComponentBase
@inject AppointmentService AppointmentService
@namespace Mindr.WebAssembly.Client.Pages.Calendar

<CalendarMenu @ref="Menu"/>
<MudStack Spacing="0">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@Menu!.ToggleDrawer" />
    <Scheduler
        OnRequestNewData="OnRequestNewData"
        OnAddingNewAppointment="OnAddingNewAppointment"
        OnOverflowAppointmentClick="OnOverflowAppointmentClick"
        EnableRescheduling="true">
        <Appointments>
            @foreach (var element in Appointments)
            {
                <Appointment Start="@element.StartDate.DateTime" End="@element.EndDate.DateTime" Color="@element.Color" OnClick="() => OnAppointmentClicked(element)" OnReschedule="(start, end) => HandleReschedule(element, start, end)">
                    @element.Subject
                </Appointment>
            }
        </Appointments>
    </Scheduler>
</MudStack>
<AppointmentDrawer @ref="AppointmentDrawer" />


@*
    @attribute [Route($"/")]
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.Fast.Components.FluentUI;
@using Mindr.WebAssembly.Client.Components
@using Mindr.WebAssembly.Client.Models;
@using Mindr.WebAssembly.Client.Shared
@using Mindr.Domain.Models.DTO.Connector;
@using System.Collections.ObjectModel;
@using Mindr.WebAssembly.Client.Pages.Agenda.Components
@using Mindr.WebAssembly.Client.Services;
@using Mindr.Domain.Models;
@using System.Text.Json.Serialization;
@using Mindr.WebAssembly.Client.Interfaces;
@using System.Globalization;

@namespace Mindr.WebAssembly.Client.Pages
@attribute [Authorize]
@inherits FluentComponentBase

<PageTitle>Overview</PageTitle>

<Breadcrumb />



<div>
    <Stack Orientation="Orientation.Horizontal">
        <div>
            <style>
                .dot {
                    height: 5px;
                    width: 5px;
                    margin: 1px;
                    border-radius: 50%;
                    display: inline-block;
                }
            </style>
            <table>
                <thead>
                    <tr>
                        <td style="text-align-last: center;">Sun</td>
                        <td style="text-align-last: center;">Mon</td>
                        <td style="text-align-last: center;">Tue</td>
                        <td style="text-align-last: center;">Wed</td>
                        <td style="text-align-last: center;">Thu</td>
                        <td style="text-align-last: center;">Fri</td>
                        <td style="text-align-last: center;">Sat</td>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Mindr.WebAssembly.Client.Constants.COUNT_DAYS_IN_CALENDAR; i++)
                    {
                        <tr>
                            @foreach (var day in Days.Skip(i * 7).Take<CalendarDay>(7))
                            {
                                <td>
                                    <AgendaDay 
                                        IsSelectedMonth="@(day.Date.Month == SelectedDate.Month)" 
                                        IsSelectedDay="@(day.Date == SelectedDate)"
                                        Date="@day.Date" 
                                        Events="Events?.Where(item => 
                                            item != null && 
                                            day.Date.Date.Ticks > item.StartDate.DateTime.Date.Ticks && 
                                            day.Date.Date.Ticks <= item.EndDate.DateTime.Date.Ticks
                                        )"
                                        HandleClick="HandleOnSelect" />
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            <Stack Orientation="Orientation.Horizontal" HorizontalAlignment="StackHorizontalAlignment.Right" VerticalGap="0">
                <FluentButton onclick="@(async () => await OnSelectMonth(SelectedDate.AddMonths(-1), true))">
                    <FluentIcon Name="@FluentIcons.ChevronCircleLeft" Size="@IconSize.Size24" Variant="@IconVariant.Regular" Color="@Color.Accent" />
                </FluentButton>
                <div style="align-self: center;">
                    @DateTimeFormatInfo.CurrentInfo.GetAbbreviatedMonthName(SelectedDate.Month)
                </div>
                <FluentButton onclick="@(async () => await OnSelectMonth(SelectedDate.AddMonths(1), true))">
                    <FluentIcon Name="@FluentIcons.ChevronCircleRight" Size="@IconSize.Size24" Variant="@IconVariant.Regular" Color="@Color.Accent" />
                </FluentButton>
            </Stack>
        </div>
        <div style="width: -webkit-fill-available;">
            @SelectedDate.ToShortDateString() Events
            @if (CurrentEvents?.Any() == true)
            {
                foreach (var item in CurrentEvents)
                {
                    <AgendaEventItem Data="@item" />
                }
            }
        </div>
    </Stack>


    <FluentAnchor Href="@GetGoogleCalendarConsent()" Target="_blank">
        Get google calendar
        <FluentIcon Slot="end" Name="@FluentIcons.Globe" Size="@IconSize.Size16" Color=Color.Neutral />
    </FluentAnchor>
    @if (_calendarList != null && _calendarList?.items?.Any() == true)
    {
        <FluentTabs OnTabChange="@(async (input) => await HandleOnTabChange(input))">
            @foreach (var calendar in _calendarList.items)
            {
                <FluentTab id="@calendar.id" Text="@calendar.summary" />
            }
            <FluentTabPanel></FluentTabPanel>
        </FluentTabs>
    }
    @if(_calendarEvents != null)
    {
        @foreach (var calendarEvent in _calendarEvents.items)
        {
            <div>@calendarEvent.summary</div>
        }
    }
</div>



as*@

