@using Mindr.WebAssembly.Client.Components
@using MudBlazor;

@namespace Mindr.WebAssembly.Client.Pages.Connectors.Drawers
@inherits LayoutComponentBase

<MudDrawer @bind-Open="@open" Width="400px" Height="100%" Anchor="Anchor.End" Elevation="1" Variant="@DrawerVariant.Persistent">
    <MudDrawerHeader>
        <MudStack Row="true">
            <MudText Typo="Typo.h6">Create Http Request</MudText>
        </MudStack>
    </MudDrawerHeader>
    <MudDrawerContainer>
        <MudTabs>
            <MudTabPanel>
                <MudTextField Label="Name" Variant="Variant.Filled" @bind-Value="@Item.Name" />
                <MudTextField Label="Description" Variant="Variant.Filled" @bind-Value="@Item.Description" />
                <MudTextField Label="Url" Variant="Variant.Filled" @bind-Value="@Item.Request.Url.Raw" />
               @* <MudSelect Label="Method" Variant="Variant.Filled" @bind-Value="@Item.Request.Method">
                    <MudSelectItem Value="GET">GET</MudSelectItem>
                    <MudSelectItem Value="POST">POST</MudSelectItem>
                    <MudSelectItem Value="PUT">PUT</MudSelectItem>
                    <MudSelectItem Value="DELETE">DELETE</MudSelectItem>
                </MudSelect>
                <MudTextField Label="Headers" Variant="Variant.Filled" @bind-Value="@Item.Request.Headers" />
                <MudTextField Label="Body" Variant="Variant.Filled" @bind-Value="@Item.Body" />*@
            </MudTabPanel>
        </MudTabs>
    </MudDrawerContainer>
</MudDrawer>
@code {
    bool open;

    void ToggleHttpItemDrawer()
    {
        open = true;
    }
}

@*Use mudblazor components <div>
    <FluentDialog Modal="true" TrapFocus="true" @ref="Dialog" @ondialogdismiss="DismissDialog">
       
        @if (IsLoading)
        {
            <Stack HorizontalAlignment="StackHorizontalAlignment.Center" VerticalAlignment="StackVerticalAlignment.Center">
                <FluentProgressRing />
            </Stack>
        }
        else if(Data != null)
        {
            <FluentTabs ActiveIndicator=false activeId="Request">
                <FluentTab id="Request">Request</FluentTab>
                <FluentTab id="Response">Response</FluentTab>
                <FluentTabPanel id="TabPanelRequest">
                    <Stack Orientation="Orientation.Horizontal" Style="width:100%">
                        <FluentSelect Items="@Client.Constants.RequestMethods"
                                        OptionText="@(i => i.Text)"
                                        OptionValue="@(i => i.Value)"
                                        OptionSelected="@(i => i.Selected)"
                                        @bind-Value="@Data.Request.Method"
                                        Class="request-method"
                                        Style="min-width:auto" />
                        //<FluentTextField Placeholder="Method" @bind-Value="" style="width: 100%;" />
                        <FluentTextField Placeholder="Url" @bind-Value="@Data.Request.Url.Raw" Style="width:100%" />
                    </Stack>

                    <FluentTabs ActiveIndicator=false activeId="Header">
                        <FluentTab id="Header">Headers</FluentTab>
                        <FluentTab id="Body">Body</FluentTab>
                        <FluentTabPanel id="TabPanelHeader">
                            <table style="width:100%; padding:20px">
                                @foreach (var line in Data.Request.Header)
                                {
                                    <tr>
                                        <td><FluentTextField Placeholder="New value" @bind-Value="@line.Key" style="width: 100%;" /></td>
                                        <td>:</td>
                                        <td><FluentTextField Placeholder="New value" @bind-Value="@line.Value" style="width: 100%;" /></td>
                                    </tr>
                                }
                                <tr>
                                    <td><FluentTextField Placeholder="New value" @bind-Value="@NewHeaderKey" @onfocusout="HandleOnHeaderAdd" style="width: 100%;" /></td>
                                    <td>:</td>
                                    <td><FluentTextField Disabled="true" style="width: 100%;" /></td>
                                </tr>
                            </table>
                        </FluentTabPanel>
                        <FluentTabPanel id="TabPanelBody">
                            //<MonacoEditor @bind-Value="@Code" Language="Json" IsDarkMode="@IsDarkMode" />
                            <FluentTextArea @bind-Value="@Data.Request.Body.Raw" style="width: 100%;" />
                        </FluentTabPanel>
                    </FluentTabs>
                </FluentTabPanel>
                <FluentTabPanel id="TabPanelResponse">
                    //TODO: response types that will been captured to add keys on.
                </FluentTabPanel>
            </FluentTabs>
        }
        // // TOD
        // Postman
        // Name
        // Description
        <Stack Orientation="Orientation.Horizontal" HorizontalAlignment="StackHorizontalAlignment.Right">
            <FluentButton Appearance="Appearance.Accent" Autofocus="true" @onclick="CloseDialog">Close dialog</FluentButton>
            <FluentButton Appearance="Appearance.Accent" Autofocus="true" @onclick="HandleOnSave">@ButtonText</FluentButton>
        </Stack>
    </FluentDialog>
</div>
*@